// Mocks generated by Mockito 5.4.2 from annotations
// in untitled3/test/features/manufaturer_list/presentation/manufacturers_page_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:untitled3/features/manufacturers_list/domain/entities/manufacturers_page.dart'
    as _i3;
import 'package:untitled3/features/manufacturers_list/domain/repositories/manufacturers_list_repository.dart'
    as _i2;
import 'package:untitled3/features/manufacturers_list/domain/use_cases/get_manufacturers_page.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeManufacturersListRepository_0 extends _i1.SmartFake
    implements _i2.ManufacturersListRepository {
  _FakeManufacturersListRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeManufacturersPage_1 extends _i1.SmartFake
    implements _i3.ManufacturersPage {
  _FakeManufacturersPage_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetManufacturersPage].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetManufacturersPage extends _i1.Mock
    implements _i4.GetManufacturersPage {
  MockGetManufacturersPage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ManufacturersListRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeManufacturersListRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.ManufacturersListRepository);
  @override
  _i5.Future<_i3.ManufacturersPage> call(
          _i4.GetManufacturersPageRequest? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue:
            _i5.Future<_i3.ManufacturersPage>.value(_FakeManufacturersPage_1(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i5.Future<_i3.ManufacturersPage>);
}
