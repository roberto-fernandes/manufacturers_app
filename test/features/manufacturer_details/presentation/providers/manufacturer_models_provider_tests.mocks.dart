// Mocks generated by Mockito 5.4.2 from annotations
// in untitled3/test/features/manufacturer_details/presentation/manufacturer_models_provider_tests.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:untitled3/features/manufacturer_details/domain/entities/manufacturer_model.dart'
    as _i5;
import 'package:untitled3/features/manufacturer_details/domain/repositories/manufacturer_details_repository.dart'
    as _i2;
import 'package:untitled3/features/manufacturer_details/domain/use_cases/get_manufacturer_models.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeManufacturerDetailsRepository_0 extends _i1.SmartFake
    implements _i2.ManufacturerDetailsRepository {
  _FakeManufacturerDetailsRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetManufacturerModels].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetManufacturerModels extends _i1.Mock
    implements _i3.GetManufacturerModels {
  MockGetManufacturerModels() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ManufacturerDetailsRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeManufacturerDetailsRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.ManufacturerDetailsRepository);
  @override
  _i4.Future<List<_i5.ManufacturerModel>> call(
          _i3.GetManufacturerModelsRequest? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i4.Future<List<_i5.ManufacturerModel>>.value(
            <_i5.ManufacturerModel>[]),
      ) as _i4.Future<List<_i5.ManufacturerModel>>);
}
